{
    "name": "ghostwriter/atprotocol",
    "description": "Bluesky API Client for AT Protocol",
    "license": "BSD-4-Clause",
    "type": "library",
    "keywords": [
        "ghostwriter",
        "atprotocol",
        "atproto",
        "atp",
        "bluesky",
        "bsky",
        "lexicons"
    ],
    "authors": [
        {
            "name": "Nathanael Esayeas",
            "email": "nathanael.esayeas@protonmail.com",
            "homepage": "https://github.com/ghostwriter",
            "role": "Developer"
        }
    ],
    "homepage": "https://github.com/ghostwriter/atprotocol",
    "support": {
        "issues": "https://github.com/ghostwriter/atprotocol/issues",
        "source": "https://github.com/ghostwriter/atprotocol",
        "rss": "https://github.com/ghostwriter/atprotocol/releases.atom",
        "security": "https://github.com/ghostwriter/atprotocol/security/advisories/new"
    },
    "funding": [
        {
            "type": "github",
            "url": "https://github.com/sponsors/ghostwriter"
        }
    ],
    "_comment": [
        "#BlackLivesMatter",
        "#FreePalestine",
        "#StandWithUkraine",
        "#StopGenocide"
    ],
    "require": {
        "php": "^8.4",
        "ext-curl": "*",
        "ghostwriter/case-converter": "~2.0.0 || ~2.1.0",
        "ghostwriter/collection": "~2.0.0",
        "ghostwriter/config": "~1.0.0",
        "ghostwriter/container": "~5.0.1",
        "ghostwriter/event-dispatcher": "~5.0.3",
        "ghostwriter/http": "dev-main",
        "ghostwriter/json": "~3.0.0",
        "ghostwriter/option": "~2.0.0",
        "ghostwriter/result": "~2.0.0",
        "ghostwriter/uuid": "~1.0.3",
        "laminas/laminas-diactoros": "~3.5.0 || ~3.6.0",
        "php-http/curl-client": "~2.3.3",
        "psr/http-client": "~1.0.3",
        "psr/http-factory": "~1.1.0"
    },
    "require-dev": {
        "ext-xdebug": "*",
        "ghostwriter/coding-standard": "dev-main",
        "ghostwriter/filesystem": "~0.1.1",
        "infection/infection": "~0.30.1",
        "mockery/mockery": "~1.6.12",
        "phpunit/phpunit": "~12.2.5",
        "vimeo/psalm": "~6.12.0"
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Ghostwriter\\AtProtocol\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\Unit\\": "tests/Unit/"
        },
        "files": [
            "tests/bootstrap.php"
        ],
        "exclude-from-classmap": [
            "tests/Fixture/"
        ]
    },
    "config": {
        "allow-plugins": {
            "ghostwriter/coding-standard": true,
            "infection/extension-installer": true
        },
        "bump-after-update": false,
        "classmap-authoritative": false,
        "discard-changes": true,
        "optimize-autoloader": true,
        "platform": {
            "php": "8.4.999"
        },
        "preferred-install": "dist",
        "prepend-autoloader": true,
        "process-timeout": 5000,
        "sort-packages": true,
        "use-parent-dir": false
    },
    "scripts": {
        "bin_composer": "vendor/ghostwriter/coding-standard/tools/composer",
        "bin_ecs": "ecs check --clear-cache --no-interaction",
        "bin_infection": "vendor/ghostwriter/coding-standard/tools/infection --ansi --min-covered-msi=0 --min-msi=0 --show-mutations --threads=max",
        "bin_normalize": "vendor/ghostwriter/coding-standard/tools/composer-normalize",
        "bin_phive": "vendor/ghostwriter/coding-standard/tools/phive",
        "bin_phpunit": "vendor/bin/phpunit --do-not-cache-result --colors=always",
        "bin_psalm": "vendor/ghostwriter/coding-standard/tools/psalm --no-cache",
        "bin_rector": "rector process --no-ansi --clear-cache",
        "cache:clear": "rm -rf ./.cache/*",
        "check": [
            "@cache:clear",
            "@bin_composer validate",
            "@test"
        ],
        "composer-normalize": "vendor/ghostwriter/coding-standard/tools/composer-normalize --no-cache --diff --no-check-lock --no-scripts --no-plugins",
        "dev": [
            "@cache:clear",
            "@composer-normalize",
            "@check",
            "@psalm:update",
            "@psalm:security",
            "@psalm:dry-run"
        ],
        "docker": [
            "@docker:build",
            "@docker:run"
        ],
        "docker:build": "docker buildx build --pull --tag workspace .",
        "docker:run": "docker run -v $(PWD):/github/workspace -w=/github/workspace -e GITHUB_DEBUG=1 -e GITHUB_WORKSPACE=/github/workspace -e GITHUB_TOKEN=github-token -e SIGNING_SECRET_KEY=secret-key workspace",
        "ecs": "@bin_ecs --fix",
        "git:submodule:update": "git submodule update --depth=1 --init --recursive --recommend-shallow --remote",
        "infection": [
            "@xdebug",
            "@bin_infection"
        ],
        "normalize": "@bin_normalize --no-cache --diff --no-check-lock --no-scripts --no-plugins",
        "phive": [
            "@bin_phive update --force-accept-unsigned",
            "@bin_phive purge"
        ],
        "phpunit": [
            "@xdebug",
            "@bin_phpunit"
        ],
        "phpunit:migrate": [
            "@xdebug",
            "@bin_phpunit --migrate-configuration"
        ],
        "psalm": "@bin_psalm --show-info=true --no-diff --shepherd --stats",
        "psalm:alter": "@bin_psalm --alter --allow-backwards-incompatible-changes=false --safe-types",
        "psalm:baseline": "@bin_psalm --no-diff --set-baseline=psalm-baseline.xml",
        "psalm:dry-run": "@bin_psalm --alter --issues=all --dry-run",
        "psalm:fix": "@bin_psalm --alter --issues=UnnecessaryVarAnnotation",
        "psalm:security": "@bin_psalm --no-diff --taint-analysis",
        "psalm:shepherd": "@psalm --no-diff --shepherd --stats",
        "psalm:update": "@bin_psalm --no-diff --update-baseline=psalm-baseline.xml",
        "rector": "@bin_rector",
        "rector:dry-run": "@rector --dry-run",
        "test": [
            "@phpunit",
            "@infection",
            "@psalm"
        ],
        "xdebug": "@putenv XDEBUG_MODE=coverage"
    }
}
